#!/bin/bash
#
# /home/tcamuso/bin/distro2iso
#

cmdline=/home/tcamuso/bin/distro2iso

usagestr=$(
cat <<EOF

/home/tcamuso/bin/distro2iso <distro-dir> <iso-dir> <Vol-ID> <Vol-Hdr-Str> <Output-File>

distro-dir	: Directory containing the distro tree, e.g. /work/distro
iso-dir		: Directory that will contain the resulting iso image, e.g. /work/iso
Vol-ID		: Volume id, e.g. "RHEL6.8-Workstation-X86_64"
Vol-Hdr-Str	: volume Header String, e.g. "RHEL6.8-Workstation-20160815-test"
Output-FIle	: e.g. "RHEL6.8-Workstation-20160815-test-x86_643-DVD.iso"

\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit
}

[ $# -eq 5 ] || usage

info () {
	[[ "$1" ]] && echo -e "$1"
	echo -n "Press any key to continue..."
	read -n1
}

# parse_config()
# $1 - section name, delimiteed by '[' and ']'
# $2 - parameter name
# $3 - path to config file
# $4 - value of parameter in section
#
# returns 0 if [section] and name are found, else returns nonzero.
#
parse_config() {
	local section=$1
	local name=$2
	local configfile=$3
	local value=$4
	local line=0
	local text=""

	[[ ${section:0:1} == "[" ]] || section="[$section]"
	line=$(grep -F -m1 -n $section $configfile | cut -d':' -f1)
	text=$(awk "/$name/ && NR > $line { print; exit }" $configfile)
	text=$(echo $text | cut -d'=' -f2-)
	text=${text##*( )}
	eval $value=$text
}

declare disdir="$1"	# directory containing the distro file tree
declare isodir="$2"	# directory to receive the iso file
declare volid="$3"	# Volume ID
declare volhdr="$4"	# Volume Header String
declare outfile=$5	# the filemane of the resulting iso file

declare origdir=$PWD	# Save Present Working Directory
declare discinfo=""	# first line of the .dicinfo file
declare xmlfile=""

[[ $(which anaconda) ]] || yum install -y anaconda
[[ $(which createrepo) ]] || yum install -y createrepo
[[ $(rpm -qa | grep anaconda-core) ]] || yum install -y anaconda-core

cd "$disdir"
discinfo=$(head -1 .discinfo)

cd repodata
xmlfile=$(ls *comps*.xml)
cutxmlfile=$(echo $xmlfile | cut -d'-' -f2-)
info "xmlfile: $xmlfile\ncut xmlfile: $cutxmlfile"
mv -vf $xmlfile $cutxmlfile

cd "$disdir"
info "$(ls repodata)"
set -x
createrepo -u "media://$discinfo#1" -g repodata/$cutxmlfile ./
set +x
info "$(ls -1 repodata/*comp*.xml)"

cd "$origdir"
mkisofs -r -R -J -T -v \
     -no-emul-boot \
     -boot-load-size 4 \
     -boot-info-table \
     -V "$volid" \
     -p "tcamuso" \
     -A "$volhdr" \
     -b isolinux/isolinux.bin \
     -c isolinux/boot.cat \
     -x "lost+found" \
     -o "$isodir"/"$outfile" \
     "$disdir"

implantisomd5 "$isodir"/"$outfile"
