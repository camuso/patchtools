#!/bin/bash
#
# getpatchwork
#

cmdline=getpatchwork

usagestr=$(
cat <<EOF

getpatchwork

Creates a set of patches from patchworks archive given the number of patches
and the full mbox link.

The user is queried for these items by invoking this script. If the script is
invoked with any parameters, the user will be given this usage text.

Patches are simply named x-y.patch, where x is the number of the patch and y is
the total number of patches.

RHEL patchworks is at http://patchwork.lab.bos.redhat.com/

\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit
}

[ "$1" ] && usage

source ~/bin/lib/ui.source

# strindex string-1 string-2
#
# Return zero-based index of string-2 in string-1
# Returns -1 if string-2 is not found in string-1
#
function strindex {
	x="${1%%$2*}"
	[[ $x = $1 ]] && echo -1 || echo ${#x}
}

getuser "Number of patches: " number
getuser "Full mbox link: " link
patchstr="/patch/"

lentopatch=$(($(strindex "$link" "$patchstr") + ${#patchstr} ))
linkhead=${link:0:$lentopatch}
linktail=${link:$lentopatch}
# echo "$linkhead --- $linktail"

patchnumlen=$(strindex "$linktail" "/")
patchnum=${linktail:0:$patchnumlen}
linktail=${linktail:$patchnumlen}
# echo "$patchnum --- $linktail"

for ((index=1; index <= number; index++)); do
	link="$linkhead""$patchnum""$linktail"
	wget -q $link
	name=$(printf "%03d-%03d.patch" $index $number)
	mv -v index.html $name
	let patchnum++
done;

