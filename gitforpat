#!/bin/bash
#
# gitforpat
#

declare -i argcount=2
declare -i optcount=0
declare cletter="--no-cover-letter"
declare reroll="--reroll-count=0"

declare usagestr=$(
cat <<EOF

$(basename $0) [OPTIONS] directory commitspec -- pathspec

  Generate a patch set from a commit expression.

  directory  - directory that will contain the patch set
  commitspec - any commit expression, which can also be preceeded by other
               git-format-patch options.
  pathspec   - optional path from which to extrac the patches

  OPTIONS:
  -c      - generate a cover letter
  -v n    - version number of the patch

  The patch set will be created with the following git command.

  git format-patch \\\

	--no-renames \\\

	--signoff \\\

	--stat=80 \\\

	--output-directory <directory> \\\

	<commitspec> [-- pathspec]
\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit $1
}

while getopts :cv:p: OPTION; do
    case "$OPTION" in

	c ) cletter="--cover-letter"
	    b_dir=true
	    optcount=$((optcount+1))
	    ;;
	v ) reroll="--reroll-count=$OPTARG"
	    optcount=$((optcount+2))
	    ;;
	* ) echo "unrecognized option -$OPTION"
	    echo -e "$usagestr"
	    exit 127
    esac
done

shift $optcount
[ $# -ge  "$argcount" ] || usage 1

directory="$1"
shift
commitspec=$@

git format-patch \
	"$cletter" \
	"$reroll" \
	--no-renames \
	--signoff \
	--stat=80 \
	--output-directory "$directory" \
	$commitspec

