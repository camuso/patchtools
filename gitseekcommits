#!/bin/bash
#
# gitfindcommits
#

cmdline=gitfindcommits

usagestr=$(
cat <<EOF

gitfindcommits [OPTION] commitsfile [path]

Where commitsfile is a list of commits with the commit in the first field
of each line (see ~/bin/gitprepcommits).

The optional path argument limits the search to git logs for that path.

Optional switches to modify the output.
  -a  - number of lines after (grep -A)
  -b  - number of lines before (grep -B)
  -c  - number of lines around center (grep -C)
  -h  - this help screen
\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit $1
}

[ $# -gt 0 ] || usage

declare -i after=0
declare -i before=0
declare -i center=0
declare commitsfile=""
declare path=""

while getopts ha:b:c: OPTION; do
    case "$OPTION" in

	h ) usage 1
	    ;;
	a ) after=$OPTARG
	    ;;
	b ) before=$OPTARG
	    ;;
	c ) center=$OPTARG
	    ;;
	* ) echo "unrecognized option -$OPTION"
	    usage 127
    esac
done

commitsfile=$1
path=$2

while read line; do
	commit=$(echo $line | cut -d' ' -f1)
	echo $commit
	git log $path | grep -A$after -B$before -C$center ^$commit
	echo
done < $commitsfile

exit 0
