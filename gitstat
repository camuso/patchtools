#!/bin/bash

function usage {
	echo
	echo "gitstat [options] <from-commit-or-tag> <to-commit-or-tag> [path]"
	echo -e "\toptions            - any valid optons for \"git diff --stat\""
	echo -e "\tfrom-commit-or-tag - start of search range"
	echo -e "\tto-commit-or-log   - end of search range"
	echo -e "\tpath               - optional path or file name"
	echo
	exit
}

[ "$1" == "?" ] && usage
[ $# -lt 2 ] && usage

argstr="$@"	# The entire command line as a string
argc=$#		# The number of arguments
optstr=""	# string containing git diff --stat options
pathspec=""	# Default path spec is empty string, which means everything
		# in the tree.

declare n_opts
declare frompos
declare topos
declare pathpos
declare fromstr
declare tostr

# Count the number of options in the argument string by counting the
# tokens that have a leading hyphen.
#
n_opts=0
for token in $argstr; do
	[ "${token:0:1}" == "-" ] && let n_opts++
done

frompos=$((n_opts + 1))
topos=$((n_opts + 2))
pathpos=$((topos + 1))
fromstr=$(echo $argstr | cut -d' ' -f $frompos)
tostr=$(echo $argstr | cut -d' ' -f $topos)

# If there is one more token after the options and the "from" and "to"
# commits/tags, then its the path.
#
[ $((argc - n_opts)) -ge 3 ] && pathspec=$(echo $argstr | cut -d' ' -f $pathpos-)

# If we have any options, extract them from the argstr.
#
[ $n_opts -gt 0 ] && optstr="$(echo $argstr | cut -d ' ' -f -$n_opts)"

echo "git diff --stat $opstr $fromstr..$tostr -- "${argstr##* }""
git diff --stat $optstr $fromstr..$tostr -- $pathspec
