#!/bin/bash
#
# grub2-select
#
# Author: Eric Zhiqiang Ma (http://www.ericzma.com)
# How to use this script:
# http://www.systutorials.com/3826/setting-default-entry-in-grub2-and-grub/
#
# Original source code:
# https://github.com/zma/usefulscripts/blob/master/script/grub2-select.bash
#
# Modified by Tony Camuso

# Text attributes
#
attr_bold="\033[1m"
attr_under="\033[4m"
attr_OFF="\033[0m"

cmdline=grub2-select

usagestr=$(
cat <<EOF

grub2-select

Presents a list of current grub launch targets.
The current default is highlighted.

Select one using its corresponding number to set the new
default launch target.
\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit
}

[ $# -eq 0 ] || usage

function getuser {
	local promptstring="$1"
	local var

	echo -ne "$attr_bold$promptstring$attr_OFF"
	read var
	[ "$var" == "q" ] && buhbye "Exiting ..."
	[ "$var" == "x" ] && ui_sh_spawn
	eval $2=$var
}

if [ -d /sys/firmware/efi ]; then
    grubcfg="/etc/grub2-efi.cfg"
else
    grubcfg="/etc/grub2.cfg"
fi

grep "^menuentry" $grubcfg | cut -d "'" -f2 >/tmp/grub2-select.entries

items=`cat /tmp/grub2-select.entries`
olddef=$(grub2-editenv list | head -1 | cut -d'=' -f2)

index=0
while read line
do
    	let index++

	spacer="   "
	if [[ "$line" == "$olddef" ]]; then
		echo -en $attr_bold
		spacer=" * "
	fi

    	printf "%s%2d %s\n" "$spacer" $index "$line"
	echo -en $attr_OFF

done < /tmp/grub2-select.entries

while true; do
	getuser "Enter your choice from above list: " choice
	[[ $choice =~ ^-?[0-9]+$ ]] || continue
	(( ($choice >= 1) && ($choice <= $index) )) && break
done

selected=`echo "$items" | head -n $choice | tail -n1`

echo "You selected: "$selected""

# set-default and change default entry files
# to make double insurance. Seems not every versions of grub2 respect
# both.
grub2-set-default "$selected"

# change the default entry in /etc/default/grub
# save a copy first
cp /etc/default/grub /etc/default/grub-grub2-select.bak

# change the default entry now
sed -i "s/GRUB_DEFAULT=.*/GRUB_DEFAULT=\"$selected\"/g" /etc/default/grub

# make a backup just in case
cp $grubcfg $grubcfg-grub2-select.bak

# regenerate the config file now
# grub2-mkconfig of some versions do not respect the symbolic links
# so generate to a tmporary file and then use cp to update the grubcfg file
tmpfile=/tmp/$(basename $0)-grub2.cfg
grub2-mkconfig -o $tmpfile && cp $tmpfile $grubcfg

newdef=$(grub2-editenv list | head -1 | cut -d'=' -f2)

echo "New default: "$newdef""
