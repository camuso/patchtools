#!/bin/bash
#
# init-my-stuff 0.3
# set -x

[ -d ~/ark ] || mkdir ~/ark
cd ~/ark

remotename="$1"
owneropt=""

#[ "$remotename" ] && owneropt="--no-same-owner"

# Unpack the archives and save them in the ~/ark directory
#
cat /dev/null > ~/.initmystuff.log
echo

for file in \
bin.tgz \
code.tgz \
etcbk.tgz \
hints.tgz
do
	echo "Unpacking $file"
	tar -C $HOME --no-same-owner --keep-newer-files -xvf $file \
		>> ~/.initmystuff.log 2>&1
done
echo

# Return to $HOME
#
cd

# Copy some files out of the unpacked archives into their respective
# directories, but only if they're newer.
#
[ -f .bashrc.orig ] || cp -vf .bashrc .bashrc.orig >> .initmystuff.log 2>&1
[ bin/.bashrc -nt .bashrc ] && cp -vf bin/.bashrc . >> .initmystuff.log 2>&1
[ bin/.vimrc -nt .vimrc ] && cp -vf bin/.vimrc . >> .initmystuff.log 2>&1
[ bin/.gitconfig -nt .gitconfig ] && cp -vf hints/git/.gitconfig . >> .initmystuff.log 2>&1

# name=$(pwd | rev | cut -d'/' -f1 | rev)
# motherdir=$(pwd | cut -d'/' -f2)

if [ "$remotename" == "root" ]; then
	[ -f /etc/krb5.orig ] || cp -vf /etc/krb5.conf /etc/krb5.orig >> .initmystuff.log 2>&1
	[ etcbk/krb5.conf -nt /etc/krb5.conf ] && cp -vf etcbk/krb5.conf /etc/. >> .initmystuff.log 2>&1
fi

# If we have a "user" it's because were running remotely, so
# do the remote cleanup.
#
if [ "$remotename" ]; then
	bin/fixup-rsync $remotename >> .initmystuff.log 2>&1
fi
cd -
# set +x
exit 0
