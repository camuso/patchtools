#!/bin/bash
#
# init-my-stuff 0.2
# set -x

[ -d ~/ark ] || mkdir ~/ark
cd ~/ark

remotename="$1"
owneropt=""

[ "$remotename" ] && owneropt="--owner="$remotename""

# Unpack the archives and save them in the ~/ark directory
#
cat /dev/null > ~/.initmystuff.log
echo
for file in bin.tgz code.tgz etcbk.tgz hints.tgz; do
	echo "Unpacking $file"
	tar -C $HOME $owneropt --keep-newer-files -xvf $file \
		>> ~/.initmystuff.log 2>&1
done
echo

# set +x

# Copy some files out of the unpacked archives into their respective
# directories, but only if they're newer.
#
[ -f ~/.bashrc.orig ] || cp -vf ~/.bashrc ~/.bashrc.orig
[ ~/bin/.bashrc -nt ~/.bashrc ] && cp -vf ~/bin/.bashrc .
[ ~/bin/.vimrc -nt ~/.vimrc ] && cp -vf ~/bin/.vimrc .
[ ~/bin/.gitconfig -nt ~/.gitconfig ] && cp -vf ~/hints/git/.gitconfig .

# name=$(pwd | rev | cut -d'/' -f1 | rev)
# motherdir=$(pwd | cut -d'/' -f2)

if [ "$remotename" == "root" ]; then
	[ -f /etc/krb5.orig ] || cp -vf /etc/krb5.conf /etc/krb5.orig
	[ ~/etcbk/krb5.conf -nt /etc/krb5.conf ] && cp -vf ~/etcbk/krb5.conf /etc/.
fi

# If the init-my-stuff script in $HOME is newer than in ~/bin, then
# move it into bin, else just remove it from $HOME
#
if [ -f ~/init-my-stuff ] && [ -f ~/bin/init-my-stuff ]; then
	if [ ~/init-my-stuff -nt ~/bin/init-my-stuff ]; then
		mv ~/init-my-stuff ~/bin/.
	else
		rm -f ~/init-my-stuff
	fi
fi

cd -
exit 0
