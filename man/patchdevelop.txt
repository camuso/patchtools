============
Patchdevelop
============

This menu-driven script allows the user to compare his set of patches with
patches from upstream. The script's settings are sticky, as they are
retained in a project file.

------------
Installation
------------

The patchdevelop script and its dependencies will be installed in $HOME/bin
and subdirectories under $HOME/bin.

From the top of your home directory:

$ tar -xvf patchdevelop.tgz

-----------------
Runing the script
-----------------

The script must be run from the top of a git tree. If not, it will exit
with the following message.
_______________________________________________________________________

$ patchdevelop

Patch Develop 1.0 - Check backported patches with upstream

The current directory...  /work/us
	 ...is not the top of a git tree.
Please cd to the top of a git tree.

_______________________________________________________________________

A directory containing the user's patches must be scpecified as well as the
directroy into which the script puts its output. These directories must not
be the same.

These directories are identified by the script as follows.

Patch directory: the directory containing the user's patches

Work directory:  the directory into which the script will put upstream
                 patches that were formatted using the upstream commit
		 hashes in the commit logs of the user's patches.

The first time the script is run, the user is queried for these paths as
follows.
_________________________________________________________________________

$ patchdevelop

Patch Develop 1.0 - Check backported patches with upstream

Press "q" to quit or "x" to spawn a new shell at any "(y/n)" prompt.

A new project file has been created.
We will need to know where your patches will be and where you
want us to put the output of this script.
New Patch directory: ~/Maildir/work/cur
_________________________________________________________________________

After the New Patch directory is entered, the user is queried for the new
Work directory as follows.
_________________________________________________________________________

New Work directory: ../temp
_________________________________________________________________________

Once these paths have been identified, the script presents the following
menu.
_________________________________________________________________________

    Environment
    -------------------
 b  Current git branch		: rh7
 m  Mail client                 : Mutt
 d  Patch directory		: /home/tcamuso/Maildir/work/cur has 33 files
 w  Work directory		: ../temp

    Run Parameters
    -------------------
 1  Rename input files		: true
 2  Apply patches (git am)	: true
 3  git am abort on error  	: true
 4  Format upstream patches	: true
 5  Compare patchsets		: true

    Control
    -------------------
 r  Run patch review
 i  Init to defaults
 p  Replace an upstream commit in the series
 h  help text
 x  Exit to a shell
 q  Quit this script

Enter one of the above:
_________________________________________________________________________

---------------
Menu selections
---------------

The "Evironment" section of the menu sets up the operating environment
for the patchreview script with the following selections.

b - Set's the git branch from which you will be operating. It is assumed
    that you have at least one RHEL branch and one upstream branch in
    your git directory. When selecting this option, you will be
    presented with a numbered choice as follows.

 1  master
 2  * rh7
 3  rh7.kabi

    This user has three branches from which to choose. The master is the
    Linus tree master, and the others are branches of rhel7.

m - Selects from which mail client the patches will be extracted.
    Currently, there are only two choices: Thunderbird and Mutt.

d - Patch directory, as described above in "Running the script".

w - Work directory, as described above in "Running the script".

The "Run Parameters" section controls what happens when the 'r' (Run)
menu selection is pressed. These options can be toggled from true to
false by pressing the corresponding option number.

1 - When true, the files extracted from the mail client and residing in
    the "Patch directory" are renamed using their subject line for the
    name.
    Resets to false after a run.

2 - When true, the patches in the "Patch Directory" are applied to the
    selected branch using "git am -3".
    Resets to false after a run.

3 - When true, the application of patches is halted, but the rest of the
    program continues to run, according to the state of the other Run
    Parameters.

4 - When true, the commit logs of the patches in the "Patch directory"
    are scanned for upstream commit hashes. If the script encounters
    more than one string that could be a commit hash, the user is
    presented with a list of candidate hashes from which to choose.

    These commit hashes are written into a file that is then used to
    format patches from the list of upstream commit hashes it contains.

    The formatted upstream patches are named with sequence numbers
    corresponding to the patches in the "Patch directory" followed by
    the summary line of the patch and are written into the "work
    directory".

    Resets to false after a run.

5 - When true, vimdiff is invoked to step through the patches, comparing
    the patches in the "Patch directory" to those in the "Work
    directory". The former will be in the left vimdiff window and the
    latter will be in the right window.

    Resets to false after a run.

The "Control" section of the menu executes operations as follows.

r - Run the script on the patches according to the parameter settings as
    described above.

i - Initialize the script's Parameters to their default settings, which is
    all in the "true" state.

p - Replace an upstream commit. The user is prompted for the patch number and
    the commit hash of the new upstream commit.

h - Display this help file.

x - Exit to a shell. Return to the running script by typing exit or ctrl-d in
    the new shell.

q - Exit the script and return to bash.

