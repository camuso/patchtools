===========
Patchreview
===========

This menu-driven script allows the user to compare his set of patches
with patches from upstream. The script's settings are sticky, as they
are retained in a project file.

------------
Installation
------------

The patchreview script and its dependencies will be installed in
$HOME/bin and subdirectories under $HOME/bin.

From the top of your home directory:

$ tar -xvf patchrevdev.tar

-----------------
Runing the script
-----------------

The script must be run from the top of a git tree. If not, it will exit
with an error message.

A directory containing the RHEL patches must be scpecified as well as a
directroy for the upstream patches. These directories must not be the
same.

These directories are identified by the script as follows.

RHEL patch directory: the directory containing the RHEL patches

Upstream directory: the directory into which the script will put upstream
                    patches that were formatted using the upstream commit
		    hashes in the commit logs of the user's patches.

The very first item listed under "Environment", is the most recent tag
in the current branch. This information is useful for knowing to which
kernel the patches will be applied.

The next item is the current working git branch. This can be changed
with the b option.

The first time the script is run, the user is queried for the following
items.

* The user's mail client. Currently only Thunderbird and Mutt are
  supported.

* The user's preferred editor. Currently only Vim and Emacs are
  supported.

* The RHEL patch directory

* The Upstream patch directory
_________________________________________________________________________

    Environment
    -------------------
    Most recent tag             : kernel-3.10.0-604.el7
 b  Current git branch          : rh7.work
 m  Mail client                 : Mutt
 d  RHEL Patch directory        : /home/tcamuso/Maildir/work/cur has 20 files
 w  Upstream patch directory    : ../temp
 e  Editor                      : Vim

    Run Parameters
    -------------------
 1  Rename input files          : true
 2  Save git head               : true
 3  Apply patches (git am)      : true
 4  git am abort on error       : true
 5  Format upstream patches     : true
 6  Size of commit hash         : 40 digits
 7  Compare mode                : Interactive Only

    Control
    -------------------
 r  Run patch review
 i  Init to defaults
 p  Replace an upstream commit in the series
 G  Restore git head
 P  Clean RHEL Patch Directory
 W  Clean Upstream Patch Directory
 C  Clean RHEL and Upstream Directories
 S  Clean Session
 h  help text
 x  Exit to a shell
 q  Quit this script

Enter one of the above:
_________________________________________________________________________

---------------
Menu selections
---------------

Some menu items are sticky and retain their values between invocations of
the script. Sticky items will be indicated with a * in the help text below.

The "Evironment" section of the menu sets up the operating environment
for the patchreview script with the following selections.

b * Set's the git branch from which you will be operating. It is assumed
    that you have at least one RHEL branch and one upstream branch in
    your git directory. When selecting this option, you will be
    presented with a numbered choice as follows.

 1  master
 2  * rh7
 3  rh7.kabi

 The current branch is indicated with a *
 To select a different branch from the choices, simply type the number of
 the desired branch at the prompt.

m * Selects from which mail client the patches will be extracted.
     Currently, there are only two choices: Thunderbird and Mutt.

d * RHEL directory, as described above in "Running the script".

w * Upstream directory, as described above in "Running the script".

e * This is the editor that will be used to perform an interactive diff
    of the files.

The "Run Parameters" section controls what happens when the 'r' (Run)
menu selection is pressed. These options can be toggled from true to
false by pressing the corresponding option number.

1 * When true, the files extracted from the mail client and residing in
    the "RHEL directory" are renamed using their subject line for the
    name.
    Resets to false after a run.

2 * If this is true, the current git head is saved and can be restored
    later using the 'G' control menu option.
    Resets to false after a run.

3 * When true, the patches in the "RHEL Directory" are applied to the
    selected branch using "git am -3".
    Resets to false after a run.

4 * When true, an abort from the attempt to 'git am' a patch will cause
    the script to exit. From that point, the user can decide how s/he
    wants to proceed.

    When false, an abort from the attempt to 'git am' a patch causes
    the script to fall back to a "patch --fuzz=3 -p1 < ' approach.
    If the patch command succeeds, the fuzz is shown and saved in a file
    in the Work directory. The file is named for the patch from which
    the fuzz was detected, with the extension ".retry"

    Even if the patch command fails, the hunks of the patch that can
    apply are applied. The rejects files are saved in their
    corresponding directory trees under the Work directory, NOT in the
    git tree directories. The ".retry" files in the Work directory
    contain the fuzz report, if any, and the names and relative
    locations of of the reject files.

    This switch is not only sticky between invocations of the script,
    but also retains its value after a run.

5 * When true, the commit logs of the patches in the "RHEL directory"
    are scanned for upstream commit hasAhes. If the script encounters
    more than one string that could be a commit hash, the user is
    presented with a list of candidate hashes from which to choose.

    These commit hashes are written into a file that is then used to
    format patches from the list of upstream commit hashes it contains.

    The formatted upstream patches are named with sequence numbers
    corresponding to the patches in the "Patch directory" followed by
    the summary line of the patch and are written into the Work
    directory.

    Resets to false after a run.

6 * Size of commit hash default is 40. Pressing this key toggles it
    to accept hexadecimal numbers ranging in size from 7 to 40 digits.

7 * The Comparison Mode is a tri-state switch with three modes.
    The user cycles through the modes by repeatedly pressing the
    associated key.

    OFF - In the OFF mode, the editor is not invoked to diff the
          pairs of patches.

    Batch - This mode will invoke a batch comparison utility with
            a menu of its own. The utility will compare the files
	    and create a list of those patch pairs that are not
	    congruent to pass to the interactive comparison script
	    for human insspection.

    Interactive Only - In this mode, all the patch pairs are presented
            for human inspection.

The "Control" section of the menu executes operations as follows.

r - Run the script on the patches according to the parameter settings as
    described above.

    Options 1 through 5 are examined and the corresponding action takes
    place. Then, either option 6 or 7 is executed. They cannot be true
    simultaneously, so only one or the other will execute.

i - Initialize the script's Parameters to their default settings, which
    is all in the "true" state.

p - Replace an upstream commit. The user is prompted for the patch
    number and the commit hash of the new upstream commit.

G - Present a list of git heads for the user to choose. These are git
    heads that were generated by applying patch sets. There is a session
    file created in the directory above the git tree, with the following
    path: ../.sessions.session.log

    The git head will be restored to the selection made by the user.

P - Delete the contents of the "Patch directory". The user will be
    prompted to be sure s/he wants to take this action before it is
    executed.

W - Delete the contents of the "Work directory". The user will be
    prompted to be sure s/he wants to take this action before it is
    executed.

C - Delete the contents of both the "Patch directory" and the "Work
    directory". The user will be prompted to be sure s/he wants to take
    this action before it is executed.

S - Clear the sessions log file. This will delete all the heads that
    were saved by applying patch sets. Not something you want to do
    frequently but may be useful from time to time.

h - Display this help text.

x - Exit to a shell. Return to the running script by typing exit or
    ctrl-d in the new shell.

q - Exit the script and return to bash.

_________________________________________________________________________

---------
Sub Menus
---------

These menus are presented when "r" (run) is pressed and option 6 or 7
is selected. Options 6 and 7 are mutually exclusive, so that enabling
one disables the other. However, the may simultaneously be in the
false state.

These menus compare the patches in the RHEL directory with those in
the Upstream directory.

The following menu only appears if the Comparison Mode in the top
menu is set to "Batch", which is the default value. If the Comparison
Mode in the top menu is set to "Interactive Only", this menu will not
appear.

     Batch Comparison of RHEL Patches with Upstream
     ----------------------------------------------

     Batch Comparison of RHEL Patches with Upstream

     Environment
     ----------------------
     Most Recent Tag            : kernel-3.10.0-516.el7
  R  RHEL directory             : /home/tcamuso/Maildir/work/cur has 9 patch files
  U  Upstream directory         : ../temp has 9 patch files
  o  Optional output file.      : ../temp/mm.log

     Lines to exclude
     ----------------------
  d  diff stats                 : true
  p  file paths                 : true
  s  without leading + or -     : true

     Output Parameters
     ----------------------
  v  verbose                    : false
  V  Very verbose               : false

     Control
     ----------------------
  r  run the comparison
  l  if output file is not /dev/stdout, less the output file
  i  init to defaults
  h  print the help using less command
  x  spawn a shell
  q  quit and return to previous execution environment

Enter one of the above:
_________________________________________________________________________

  Each patchfile in the RHEL directory is compared with its complement in
  the Upstream directory. If a mismatched line is found, the sequence
  number of that patch pair is printed to the ofile, which is /dev/stdout
  by default.

  Verbose output options are available for examination of the files that
  are congruent and the ones that differ.

  Menu choices
  ------------

  All menu items are sticky, persisting across invocations of this script.
  You can use the verbose options to test the results.

  When you get the results you want, set the verbose options to false and
  press q to return to the previous execution environment.

  R - change the directory containing the RHEL patch files
  U - change the directory containing the Upstream patch files

  o - change the output file.
      The default is /dev/stdout, but the patchreview and patcmp scripts
      will call this with an output file defined that will exist in the
      Upstream patch directory as mm.log. You may change the name and
      location of this file with this option.

  d - when true, excludes diff stat lines from the comparison.
      It is possible for the patches to still be congruent even when
      the diff stats are different. For example, when the RHEL patch is
      a subset of the upstream patch
      Default: true

  p - when true, excludes path lines from the comparison
      You will want to do this if the file being patched has been renamed
      or moved to a different directory.
      Default: true

  s - when true, excludes lines that do not begin with + or -
      You will want to do this if you are only concerned about the lines
      that are actually being changed by the patch. When true, this will
      automatically exclude the diff stat lines, but WILL NOT exclude
      the path lines.
      Default: true

  v - verbose prints the sequence numbers of all files and indicates which
      are congruent and which are not
      Default: false

  V - Very verbose prints the sequence numbers of all the files, all the
      lines being compared in each file, and indicates whether the files
      are congruent or not.
      Default: false

      If Very verbose is true, then verbose will automatically be set true.
      If verbose is false, then Very verbose will automatically be set false.

  r - run the comparison
  l - run less on the output file
  i - init the controls and output file to defaults
  h - less this help text
  x - spawn a shell
  q - quit and return to previous execution environment


If the Comparison Mode is set to "Batch", the following menu appears upon
quitting from the Batch Comparison menu.

If the Batch Comparison mode is set to "Interactive Only", then this menu
will appear after pressing "r" for "run" from the top menu.

Interactively Compare Patch Pairs
-----------------------------------------------------------------
Compare : RHEL7.4-net-PATCH-01-20-net--sctp--keep-owned-chunk-in.patch
   With : 0001-net-sctp-keep-owned-chunk-in-destructor_arg-instead-.patch

	    Last Tag : kernel-3.10.0-604.el7
	    RHEL dir : /home/tcamuso/Maildir/work/cur
	Upstream dir : ../temp
-----------------------------------------------------------------
	c - run batch file comparison to find mismatched patch pairs
	m - only examine mismatched patch pairs: true
	s - show mismatched patch pair numbers
	b - back to the previous patch
	n - prompt for a number for a specific patch
	p - replace current upstream patch with a different commit
	x - spawns a secondary shell
	q - quit and return to previous execution environment
	or any other key moves forward to the next patch ...

All the menu items are pretty much self-explanatory, except for the first
three.

c - invokes the batch comparison script to generate a list of files that
    are sufficiently different to warrant human inspection. When the
    associated key is pressed, the Batch Comparison menu is presented.

m - Option only appears if a list of incongruent patch pairs was
    generated by the batch comparison script.
    This opton is set to true by default after running a batch
    comparison. When true, only the incongruous patch pairs will be
    diffed by the editor. When off, all patches are considered.

s - Option only appears if a list of incongruent patch pairs was
    generated by the batch comparison script.
    When the associated key is pressed, a list of numbers of the patch
    pairs that were incongruent is printed to the screen.
_________________________________________________________________________

