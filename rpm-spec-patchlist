#!/bin/bash
#
# rpm-spec-patchlist
#

declare outfile="patchlist.txt"
declare dir=$(dirname "$2")
declare name=$(echo "$1" | cut -d'-' -f1)
declare version=$(echo "$1" | cut -d'-' -f2)
declare revision=$(echo "$1" | cut -d'-' -f3 | cut -d'.' -f1)
declare dist=$(echo "$1" | rev | cut -d'.' -f1 | rev)
declare n=1;
declare err1="Directory \"%s\" does not exist.\n"
declare err2="There are no \".patch\" files in directory \"%s\""

declare usagestr=$(
cat <<EOF

$0 name-version-revision.dist dir

name-version-revision.dist, e.g. tboot-1.9.4-1.el7

Creates text to be inserted in a rpm spec file for patches in the specified
directory.
If no directory is specified, then the current directory is used.
The output is created in the specified directory and named \"$outfile\"

\0
EOF
)

usage() {
	echo -e "$usagestr"
	exit
}

[ $# -ne 2 ] && usage

# See if the directory exists.
#
[[ ! -d "$dir" ]] && { printf "$err1" $dir; exit 1; }

# See if there are any .patch files in the directory
#
ls *.patch
(( $? == 0 )) || { printf "$err2" $dir; exit 2; }

# Create an empty output file
#
> "$dir"/"$outfile"

for f in $(ls -1 *.patch); do
	printf "Patch%02d:\t$name-%%{version}-%%{release}-%s\n" \
		$n $(echo $f | cut -d'-' -f1-) >> "$outfile"
	let n++
done

n=1
for f in $(ls -1 *.patch); do

	# Rename file to "name-version-revision.dist-"patchname
	#
	mv $f $name-$version-$revision.$dist-$f

	# Create text to look like this:
	# patch01 -p1 -b .patchname
	#
	printf "%%patch%02d -p1 -b .%s\n" \
		$n $(echo $(basename $f .patch) | cut -d'-' -f1-) >> "$outfile"
	let n++
done;

